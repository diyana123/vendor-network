name: "Build network"
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  id-token: write
  contents: read
  pull-requests: write 

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: ${{ secrets.AWS_OIDC_ROLE_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5
          working-directory: ./terraform

      - name: Terraform fmt
        id: fmt
        working-directory: ./terraform
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: ./terraform
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_TFSTATE_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_TFSTATE_KEY_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: > 
          terraform init -backend-config="bucket=${{ secrets.AWS_TFSTATE_BUCKET_NAME }}" 
          -backend-config="key=${{ secrets.AWS_TFSTATE_KEY_NAME }}" 
          -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Validate
        id: validate
        working-directory: ./terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform
        run: terraform plan -no-color
        if: github.event_name == 'pull_request'

      - name: Comment Terraform Plan Output
        id: run
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fmtResult = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\``;
            
            const planOutput = `\`\`\`\n${{ steps.plan.outputs.stdout }}\n\`\`\``;

            const commentBody = fmtResult + `\n<details><summary>Show Plan</summary>\n${planOutput}\n</details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });

      - name: Terraform Plan Status
        id: status
        working-directory: ./terraform
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        working-directory: ./terraform
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
